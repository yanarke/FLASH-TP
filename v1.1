-- Portal Gun améliorée (LocalScript)
-- Crée deux portails connectés qui s'alignent correctement sur murs/sol/plafond

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer
local tool = script.Parent
local mouse

-- Configuration
local PORTAL_SIZE = Vector3.new(4, 6, 0.2)
local TELEPORT_OFFSET = Vector3.new(0, 3, 0)
local TELEPORT_COOLDOWN = 0.5

local portals = { red = nil, blue = nil }
local lastTeleport = 0
local nextColor = "blue"

-- Crée le portail visuel
local function createPortal(pos, normal, color)
	local p = Instance.new("Part")
	p.Name = "Portal"
	p.Size = PORTAL_SIZE
	p.Anchored = true
	p.CanCollide = false
	p.Material = Enum.Material.SmoothPlastic
	p.Transparency = 0
	p.Color = Color3.fromRGB(20, 20, 20)
	p.Parent = workspace

	-- Orientation selon la normale du hit
	local upVector = Vector3.new(0, 1, 0)
	if math.abs(normal:Dot(upVector)) > 0.9 then
		-- Sol ou plafond : utiliser X pour stabiliser la rotation
		upVector = Vector3.new(0, 0, 1)
	end
	local right = normal:Cross(upVector).Unit
	local up = right:Cross(normal).Unit
	p.CFrame = CFrame.fromMatrix(pos, right, up, -normal)

	-- Outline coloré
	local sb = Instance.new("SelectionBox")
	sb.Adornee = p
	sb.LineThickness = 0.03
	sb.SurfaceTransparency = 0.5
	sb.Color3 = color
	sb.Parent = p

	-- SurfaceGui + Viewport
	local surface = Instance.new("SurfaceGui")
	surface.Face = Enum.NormalId.Front
	surface.SizingMode = Enum.SurfaceGuiSizingMode.PixelsPerStud
	surface.AlwaysOnTop = true
	surface.Parent = p

	local vp = Instance.new("ViewportFrame")
	vp.Size = UDim2.new(1, 0, 1, 0)
	vp.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
	vp.BackgroundTransparency = 0
	vp.CurrentCamera = nil
	vp.Parent = surface

	return p, vp
end

-- Place un portail
local function placePortal(colorName, color3, pos, normal)
	if portals[colorName] and portals[colorName].Part then
		portals[colorName].Part:Destroy()
	end

	local part, vp = createPortal(pos, normal, color3)

	local cam = Instance.new("Camera")
	cam.Parent = vp
	vp.CurrentCamera = cam

	local portalData = {
		Part = part,
		Color = color3,
		Viewport = vp,
		Camera = cam,
	}
	portals[colorName] = portalData

	-- Lier les portails entre eux
	local otherName = (colorName == "red") and "blue" or "red"
	local otherPortal = portals[otherName]
	if otherPortal and otherPortal.Part then
		portalData.Other = otherPortal
		otherPortal.Other = portalData
	else
		portalData.Other = nil
	end

	-- Téléportation quand le joueur touche
	part.Touched:Connect(function(hit)
		local char = player.Character
		if not char then return end
		local hrp = char:FindFirstChild("HumanoidRootPart")
		if not hrp or not (hit:IsDescendantOf(char) or hit == hrp) then return end
		if tick() - lastTeleport < TELEPORT_COOLDOWN then return end
		lastTeleport = tick()

		if not portalData.Other or not portalData.Other.Part then return end

		local fromCF = portalData.Part.CFrame
		local toCF = portalData.Other.Part.CFrame
		local rel = fromCF:Inverse() * hrp.CFrame
		local newCF = toCF * rel + TELEPORT_OFFSET
		hrp.CFrame = newCF
	end)
end

-- Mise à jour visuelle
RunService.RenderStepped:Connect(function()
	for name, p in pairs(portals) do
		if p and p.Part and p.Viewport and p.Camera then
			if p.Other and p.Other.Part then
				p.Viewport.BackgroundTransparency = 1
				local worldCam = workspace.CurrentCamera
				local relative = p.Other.Part.CFrame:ToObjectSpace(worldCam.CFrame)
				p.Camera.CFrame = p.Part.CFrame * relative
				p.Viewport.CurrentCamera = p.Camera
			else
				p.Viewport.BackgroundTransparency = 0
			end
		end
	end
end)

-- Gestion de la souris
tool.Equipped:Connect(function(m)
	mouse = m
end)

tool.Activated:Connect(function()
	if not mouse then return end
	local target = mouse.Target
	if not target then return end

	local hitPos = mouse.Hit.Position
	local normal = mouse.Hit.LookVector * -1 -- Inversé pour que le portail regarde la surface
	local colorName = nextColor
	local color = (colorName == "red") and Color3.fromRGB(255, 80, 80) or Color3.fromRGB(90, 140, 255)

	placePortal(colorName, color, hitPos, normal)

	nextColor = (nextColor == "red") and "blue" or "red"
end)

-- Nettoyage
tool.AncestryChanged:Connect(function(_, parent)
	if not parent then
		for _, p in pairs(portals) do
			if p and p.Part then
				p.Part:Destroy()
			end
		end
	end
end)
