local tool = Instance.new("Tool")
tool.RequiresHandle = false
tool.Name = "Flash Teleport"
tool.Parent = game.Players.LocalPlayer.Backpack

local player = game.Players.LocalPlayer
local mouse = player:GetMouse()
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local function tweenTo(part, targetCFrame, duration)
	local tweenInfo = TweenInfo.new(duration, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
	local tween = TweenService:Create(part, tweenInfo, {CFrame = targetCFrame})
	tween:Play()
	tween.Completed:Wait()
end

tool.Activated:Connect(function()
	if not mouse or not player.Character then return end

	local char = player.Character
	local hrp = char:FindFirstChild("HumanoidRootPart")
	if not hrp then return end

	local humanoid = char:FindFirstChildOfClass("Humanoid")
	local targetPos = mouse.Hit.p
	local startPos = hrp.Position
	local camera = workspace.CurrentCamera

	-- Sauvegarde la hauteur actuelle de la caméra
	local cameraY = camera.CFrame.Y

	-- Désactive les collisions
	for _, part in ipairs(char:GetDescendants()) do
		if part:IsA("BasePart") then
			part.CanCollide = false
		end
	end

	-- Étape 1 : descente du joueur sous la map (-30 studs)
	local downPos = startPos - Vector3.new(0, 30, 0)
	tweenTo(hrp, CFrame.new(downPos), 0.1)

	-- Pendant le dash, la caméra garde la même hauteur
	local connection
	connection = RunService.RenderStepped:Connect(function()
		local camCF = camera.CFrame
		camera.CFrame = CFrame.new(camCF.Position.X, cameraY, camCF.Position.Z) * CFrame.Angles(camCF:ToEulerAnglesXYZ())
	end)

	-- Étape 2 : déplacement horizontal sous la map
	local midPos = Vector3.new(targetPos.X, downPos.Y, targetPos.Z)
	tweenTo(hrp, CFrame.new(midPos), 0.3)

	-- Étape 3 : remontée à la surface
	local finalPos = targetPos + Vector3.new(0, 2.5, 0)
	tweenTo(hrp, CFrame.new(finalPos), 0.1)

	-- Réactive les collisions et la caméra normale
	task.delay(0.2, function()
		for _, part in ipairs(char:GetDescendants()) do
			if part:IsA("BasePart") then
				part.CanCollide = true
			end
		end
		if connection then
			connection:Disconnect()
		end
	end)
end)
